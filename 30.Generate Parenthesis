class Solution {
public:
vector<string>result;
bool isValid(string st)
{
    stack<char>s;
    for(int i=0;i<st.size();i++)
    {
        if(st[i]=='(')s.push('(');

       else if(st[i]==')' && !s.empty() && s.top()=='(')s.pop();

       else return false;
    }
    if(s.empty())return true;
    return false; 
}
void solve(string curr,int ind)
{
    if(curr.length()==2*ind && isValid(curr))
    {
        result.push_back(curr);
         return;
    }
    if (curr.length() < 2 * ind) {
    curr.push_back('(');
    solve(curr,ind);
    curr.pop_back();
    curr.push_back(')');
    solve(curr,ind);
    curr.pop_back();
    }
}
    vector<string> generateParenthesis(int n) {
     solve("",n);
     return result;
    }
};
