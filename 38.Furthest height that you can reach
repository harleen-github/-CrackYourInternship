#include <vector>
#include <queue>
using namespace std;

class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {
        int n = heights.size();
        priority_queue<int> pq;  // max-heap to store the largest jumps requiring bricks
        int i = 0;

        for (; i < n - 1; i++) {
            int diff = heights[i + 1] - heights[i];
            if (diff > 0) {
                pq.push(diff);
                bricks -= diff;

                if (bricks < 0) {
                    if (ladders > 0) {
                        ladders--;
                        bricks += pq.top();
                        pq.pop();
                    } else {
                        return i;
                    }
                }
            }
        }
        return i;
    }
};
