class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
      
std::priority_queue<std::pair<double, std::pair<int, int>>, std::vector<std::pair<double, std::pair<int, int>>>, std::greater<std::pair<double, std::pair<int, int>>>> pq;

        for(int i=0;i<points.size();i++)
        {
            int x=points[i][0];
            int y=points[i][1];
            double dist=sqrt((x*x)+(y*y));
            pq.push({dist,{x,y}});
        }
        vector<vector<int>>ans;
        
        while(k--)
        {  
            auto top=pq.top();pq.pop();
            ans.push_back({top.second.first,top.second.second});
        }
        return ans;
    }
};
